// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rp
List rp(double phi_r, arma::mat coords, int n_r, int r_r, double nu_r, int num_r);
RcppExport SEXP _rsrHonors_rp(SEXP phi_rSEXP, SEXP coordsSEXP, SEXP n_rSEXP, SEXP r_rSEXP, SEXP nu_rSEXP, SEXP num_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type phi_r(phi_rSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< int >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< int >::type r_r(r_rSEXP);
    Rcpp::traits::input_parameter< double >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< int >::type num_r(num_rSEXP);
    rcpp_result_gen = Rcpp::wrap(rp(phi_r, coords, n_r, r_r, nu_r, num_r));
    return rcpp_result_gen;
END_RCPP
}
// mmC
arma::mat mmC(arma::mat A, arma::mat B, int n, int b, int num);
RcppExport SEXP _rsrHonors_mmC(SEXP ASEXP, SEXP BSEXP, SEXP nSEXP, SEXP bSEXP, SEXP numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type num(numSEXP);
    rcpp_result_gen = Rcpp::wrap(mmC(A, B, n, b, num));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP run_testthat_tests();

static const R_CallMethodDef CallEntries[] = {
    {"_rsrHonors_rp", (DL_FUNC) &_rsrHonors_rp, 6},
    {"_rsrHonors_mmC", (DL_FUNC) &_rsrHonors_mmC, 5},
    {"run_testthat_tests", (DL_FUNC) &run_testthat_tests, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_rsrHonors(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
